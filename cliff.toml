# configuration file for git-cliff (0.1.0)

[changelog]
# changelog header
header = """
# Changelog and Added Extensions\n
All added or modified extensions will automatically be populated here.
"""
# template for the changelog body
# https://tera.netlify.app/docs/#introduction
body = """
{% if version %}\
    ## [{{ version | trim_start_matches(pat="v") }}] - {{ timestamp | date(format="%Y-%m-%d") }}
{% else %}\
    ## Released
{% endif %}\
{% for group, commits in commits | group_by(attribute="group") %}
    ### {{ group | upper_first }}
    {% for commit in commits %}
        - {{ commit.message | upper_first }}\
    {% endfor %}
{% endfor %}\n
"""
# remove the leading and trailing whitespace from the template
trim = true
# changelog footer
footer = """
<!-- generated by git-cliff -->
"""

[git]
# parse the commits based on https://www.conventionalcommits.org
conventional_commits = true
# filter out the commits that are not conventional
filter_unconventional = true
link_parsers = [
    { pattern = "(.+)'\\/'([^\\/]+)", href = "[$2]($&)"},
]
# regex for parsing and grouping commits
commit_parsers = [
    { message = "^docs.*untracked", skip = true},
    { message = "^chore", skip = true},
    { message = "^docs.*test", skip = true},
    { message = "^docs.*rename", skip = true},
    { message = "^docs.*home", skip = true},
    { message = ".*test", skip = true},
    { message = "^.*upload", skip = true},
    { message = ".*delete", skip = true},
    { message = "^docs.*create", group = "Added"},
    { message = "^.*: create", group = "Added"},
    { message = "^.*: add", group = "Added"},
    { message = "^.*: support", group = "Added"},
    { message = "^.*: remove", skip = true},
    { message = "^.*: delete", skip = true},
    { message = "^fix", group = "Fixed"},
    { message = "^.*: fix", group = "Fixed"},
    { message = "^.*", group = "Updated"},
]
# filter out the commits that are not matched by commit parsers
filter_commits = true
# glob pattern for matching git tags
tag_pattern = "v[0-9]*"
# regex for skipping tags
skip_tags = "v0.1.0-beta.1"
# regex for ignoring tags
ignore_tags = ""
# sort the tags chronologically
date_order = false
# sort the commits inside sections by oldest/newest order
sort_commits = "newest"
